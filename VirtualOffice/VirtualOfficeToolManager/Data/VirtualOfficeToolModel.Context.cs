//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Core.Objects;

namespace VirtualOfficeToolManager.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    
    public partial class VirtualOfficeEntities : DbContext
    {
        public VirtualOfficeEntities()
            : base("name=VirtualOfficeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<PredefinedFilter> PredefinedFilters { get; set; }
        public DbSet<ReportPredefinedFilterRel> ReportPredefinedFilterRels { get; set; }
        public DbSet<Report> Reports { get; set; }
        public DbSet<ReportToReportRel> ReportToReportRels { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<UserReport> UserReports { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Sql_HtmlTypeNameMappings> Sql_HtmlTypeNameMappings { get; set; }
        public DbSet<ReportLabel> ReportLabels { get; set; }
    
        public virtual ObjectResult<string> sp_retrieve_spNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_retrieve_spNames");
        }
    
        public virtual ObjectResult<string> sp_retrieve_sp_columns(string procedure_name)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_retrieve_sp_columns", procedure_nameParameter);
        }
    
        public virtual ObjectResult<string> sp_retrieve_storedprocedure_columns(string spname)
        {
            var spnameParameter = spname != null ?
                new ObjectParameter("spname", spname) :
                new ObjectParameter("spname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_retrieve_storedprocedure_columns", spnameParameter);
        }
    }
}
